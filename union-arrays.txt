FIND UNION:-

Approach:-
1.i=0 ,j=0;
2.if (arr[i]<arr[j]) Print arr[i].i++;
3.if (arr[j]<arr[i]) Print arr[j].j++;
4.if (arr[i]==arr[j]) Print arr[i] or arr[j].i++ and j++.

class Main {
    /* Function prints union of arr1[] and arr2[]
    m is the number of elements in arr1[]
    n is the number of elements in arr2[] */
    static void printUnion(int arr1[], int arr2[], int m, int n)
    {
      int i=0;
      int j=0;
      while(i<m && j<n)
      {
          if (arr1[i]<arr2[j])
          {
                System.out.print(arr1[i]+" ");
                  i++;
          }
          else if(arr2[j]<arr1[i])
          {
              System.out.print(arr2[j]+" ");
              j++;
          }
          else
          {
              System.out.print(arr1[i]+" ");
              i++;
              j++;
          }
 
      }
       while (i < m)
            System.out.print(arr1[i++] + " ");
        while (j < n)
            System.out.print(arr2[j++] + " ");
 
    }
 
    public static void main(String args[])
    {
        int arr1[] = { 1, 2, 4, 5, 6 };
        int arr2[] = { 2, 3, 5, 7 };
        int m = arr1.length;
        int n = arr2.length;
        printUnion(arr1, arr2, m, n);
    }
}

//time complexity:-O(n),space Complexity:O(1)